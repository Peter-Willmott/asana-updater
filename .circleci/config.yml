version: 2.1

set_base_docker_image: &set_base_docker_image
  docker:
    - image: cimg/python:3.8
  environment:
    ECR_REPOSITORY: jobs/asana-integrations
  working_directory: ~/project

set_env_vars: &set_env_vars
  name: Set required environment variables
  command: |
    if [ "${CIRCLE_BRANCH}" == "master" ]; then
      ENVIRONMENT=production
    else
      echo "This step should only be run on master but found $CIRCLE_BRANCH"
      exit 1
    fi

    echo "export ENVIRONMENT=${ENVIRONMENT}" >> $BASH_ENV
    echo "export IMAGE_URI=\"${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com/${ECR_REPOSITORY}/${ENVIRONMENT}:${CIRCLE_SHA1}\"" >> $BASH_ENV
    cat $BASH_ENV

jobs:
  Test:
    <<: *set_base_docker_image
    steps:
      - checkout
      - run:
          name: Install requirements
          command: |
            python3 -m venv env && source env/bin/activate
            pip install -U pip && pip install -r requirements.txt --extra-index-url=${PIP_EXTRA_INDEX_URL}
      - run:
          name: Test
          command: |
            source env/bin/activate
            pytest --junitxml=test-results/junit.xml
      - store_test_results:
          path: test-results

  Build and push:
    <<: *set_base_docker_image
    steps:
      - checkout
      - setup_remote_docker
      - run: *set_env_vars
      - run:
          name: Authenticate against ECR
          command: |
            pip install awscli
            eval $(aws ecr get-login --region $AWS_REGION_NAME --no-include-email)
      - run:
          name: Build and push docker image
          command: |
            docker build --build-arg PIP_EXTRA_INDEX_URL=${PIP_EXTRA_INDEX_URL} -t ${IMAGE_URI} --no-cache .
            docker push ${IMAGE_URI}

  Deploy:
    <<: *set_base_docker_image
    steps:
      - checkout
      - run: *set_env_vars
      - run:
          name: Install latest Terraform CLI
          # https://www.terraform.io/docs/cli/install/apt.html
          command: |
            curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
            sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
            sudo apt update && sudo apt install terraform
            terraform --version
      - run:
          name: Apply Terraform infrastructure
          working_directory: .infra
          command: |
            export TF_INPUT=0
            export TF_IN_AUTOMATION=true
            terraform init -backend-config="token=$TF_API_TOKEN"
            echo $(jq ".image_uri=\"$IMAGE_URI\"" terraform.auto.tfvars.json) > terraform.auto.tfvars.json
            terraform apply -input=false -auto-approve

workflows:
  version: 2

  Build, Deploy:
    jobs:
      - Build and push:
          context: sherlock
          filters:
            branches:
              only:
                - master
      - Deploy:
          context: sherlock
          requires:
            - Build and push
          filters:
            branches:
              only:
                - master
